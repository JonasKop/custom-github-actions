name: Test "Build container image"

on:
  push:
    branches:
      - main
    paths:
      - build-container-image/**
      - .github/workflows/build-container-image-test.yml
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - build-container-image/**
      - .github/workflows/build-container-image-test.yml

jobs:
  test:
    runs-on: ubuntu-22.04
    name: Run tests
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Create Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM docker.io/ubuntu:22.04
          RUN apt-get update && apt-get install -y vim-tiny
          CMD which vim.tiny

          EOF

      - name: Build container image
        uses: ./build-container-image
        with:
          image: build-container-image-test
          tag: ${{ github.run_id }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
  verify:
    runs-on: ubuntu-22.04
    if: always()
    name: Verify test results
    needs: test
    permissions:
      packages: write
    steps:
      - name: Get repository owner
        shell: bash
        run: echo "REPOSITORY_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> "${GITHUB_ENV}"

      - name: Run container image
        run: docker run ghcr.io/$REPOSITORY_OWNER/build-container-image-test:${{ github.run_id }}

      - name: Delete container tag
        if: always()
        run: |
          set -eax
          imageTags=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /users/$GITHUB_REPOSITORY_OWNER/packages/container/build-container-image-test/versions)

          id=$(echo "$imageTags" | yq '.[] | select(.metadata.container.tags.[] == strenv(VERSION)) | .id')

          gh api \
            --method DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /users/$GITHUB_REPOSITORY_OWNER/packages/container/build-container-image-test/versions/$id
        env:
          VERSION: ${{ github.run_id }}
          GH_TOKEN: ${{ github.token }}
