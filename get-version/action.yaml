name: Get version
description: Setting version and automatically incrementing the patch version on main
outputs:
  version:
    description: The version
    value: ${{ steps.get_version.outputs.version }}
runs:
  using: composite
  steps:
    - id: get_version
      name: Get version
      shell: bash
      run: |
        set -e

        # Get PR source branch if exists, otherwise use current branch
        branch=${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}

        # Get the latest tag
        latest_version=$(git describe --tags --abbrev=0 || :)

        # If no tag exists, set the version to 0.0.0
        if [ -z "$latest_version" ]; then
          version="0.0.0"
          echo "No previous version exists, creating a new one: ${version}"
        else
          # Extract the major, minor, and patch versions
          version_parts=(${latest_version//./ })
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}

          # If on main, increment the patch version
          if [ "${branch}" == "main" ]; then
            patch=$((patch + 1))
          fi

          version="${major}.${minor}.${patch}"
        fi

        # If not on main, add a hash suffix
        if [ "${branch}" != "main" ]; then
          hash_suffix=$(git rev-parse --short=8 HEAD)
          version="${version}-${hash_suffix}"
        fi

        echo "Final version: ${version}"

        # Set variables
        echo "VERSION=$version" >>"${GITHUB_ENV}"
        echo "version=$version" >>"${GITHUB_OUTPUT}"
